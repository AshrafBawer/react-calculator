{"version":3,"sources":["components/App.js","index.js","components/Buttons.js"],"names":["App","props","renderInput","formula","currentValue","setState","state","displayFormula","this","className","id","Buttons","handleCalc","React","Component","ReactDOM","render","document","querySelector","value","preValue","evaluated","getInput","e","target","dataset","test","replace","getOperation","finalResult","eval","calculate","alert","result","clearAll","type","onClick","data-value"],"mappings":"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","file":"static/js/main.bc4d8ca5.chunk.js","sourcesContent":["import React from 'react';\r\nimport Buttons from './Buttons';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { formula: '', currentValue: '0' };\r\n  }\r\n\r\n    renderInput = (formula, currentValue) => {\r\n      this.setState({ formula, currentValue });\r\n    }\r\n\r\n    render() {\r\n      const { formula: displayFormula } = this.state;\r\n      const { currentValue } = this.state;\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"content\">\r\n            <div id=\"display_values\">\r\n              <div id=\"formula\">{displayFormula}</div>\r\n              <div id=\"display\">{currentValue}</div>\r\n            </div>\r\n            <Buttons renderInput={this.renderInput} handleCalc={this.handleCalc} />\r\n          </div>\r\n          <span className=\"text-center lead\" id=\"author\">\r\nDesigned and Coded by\r\n            {' '}\r\n            <br />\r\n            {' '}\r\nAshraf Bawer\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.querySelector('#root'),\r\n);\r\n","import React from 'react';\r\n\r\nlet value = '';\r\nlet formula = '';\r\nlet preValue = '';\r\nlet evaluated = false;\r\n\r\nclass Buttons extends React.Component {\r\n    getInput = (e) => {\r\n      if (evaluated) {\r\n        value = 0;\r\n        formula = '';\r\n        evaluated = false;\r\n      }\r\n      preValue = value;\r\n      value += e.target.dataset.value;\r\n      const regex = /[.]\\d*[.]+/g;\r\n      if (regex.test(value)) {\r\n        value = preValue;\r\n      } else {\r\n        formula += e.target.dataset.value;\r\n      }\r\n\r\n\r\n      value = value.replace(/^0+/, '0');\r\n      value = value.replace(/^0(?=\\d)/, '');\r\n      formula = formula.replace(/^0+/, '0');\r\n      formula = formula.replace(/^[.]/, '0.');\r\n      formula = formula.replace(/^0(?=\\d)/, '');\r\n      formula = formula.replace(/(?<=[+*/-])0+(?=\\d)/, '');\r\n      this.props.renderInput(formula, value);\r\n    }\r\n\r\n    getOperation = (e) => {\r\n      if (evaluated) {\r\n        const finalResult = eval(formula);\r\n        formula = finalResult;\r\n        evaluated = false;\r\n      } else {\r\n\r\n      }\r\n      value = 0;\r\n      formula += e.target.dataset.value;\r\n      formula = formula.replace(/^[+*-/]+/, '');\r\n      formula = formula.replace(/[+]+/, '+');\r\n      formula = formula.replace(/[-]+/, '-');\r\n      formula = formula.replace(/[+*-/]+\\*/, '*');\r\n      formula = formula.replace(/[+]+\\-/, '-');\r\n      formula = formula.replace(/[*/+-]+\\+/, '+');\r\n      formula = formula.replace(/[+*-/]+\\//, '/');\r\n      this.props.renderInput(formula, value);\r\n    }\r\n\r\n    calculate = () => {\r\n      if (formula === '') {\r\n        alert('Please add some numbers to calculate');\r\n      } else {\r\n        formula = formula.replace(/[+*/-]$/, '');\r\n        const result = `${formula}=${eval(formula)}`;\r\n        this.props.renderInput(result, eval(formula));\r\n        evaluated = true;\r\n      }\r\n    }\r\n\r\n    clearAll = () => {\r\n      value = 0;\r\n      formula = '';\r\n      evaluated = false;\r\n      this.props.renderInput(formula, value);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div id=\"buttons\">\r\n\r\n            <div className=\"numbers\">\r\n\r\n              <button type=\"button\" className=\"num btn\" onClick={this.getInput} data-value={1} id=\"one\">1</button>\r\n              <button type=\"button\" className=\"num btn\" onClick={this.getInput} data-value={2} id=\"two\">2</button>\r\n              <button type=\"button\" className=\"num btn\" onClick={this.getInput} data-value={3} id=\"three\">3</button>\r\n              <button type=\"button\" className=\"num btn\" onClick={this.getInput} data-value={4} id=\"four\">4</button>\r\n              <button type=\"button\" className=\"num btn\" onClick={this.getInput} data-value={5} id=\"five\">5</button>\r\n              <button type=\"button\" className=\"num btn\" onClick={this.getInput} data-value={6} id=\"six\">6</button>\r\n              <button type=\"button\" className=\"num btn\" onClick={this.getInput} data-value={7} id=\"seven\">7</button>\r\n              <button type=\"button\" className=\"num btn\" onClick={this.getInput} data-value={8} id=\"eight\">8</button>\r\n              <button type=\"button\" className=\"num btn\" onClick={this.getInput} data-value={9} id=\"nine\">9</button>\r\n              <button type=\"button\" className=\"num btn\" onClick={this.getInput} data-value={0} id=\"zero\">0</button>\r\n            </div>\r\n            <div className=\"calculations\">\r\n              <button type=\"button\" className=\"cal btn\" id=\"add\" onClick={this.getOperation} data-value=\"+\">+</button>\r\n              <button type=\"button\" className=\"cal btn\" id=\"subtract\" onClick={this.getOperation} data-value=\"-\">-</button>\r\n              <button type=\"button\" className=\"cal btn\" id=\"multiply\" onClick={this.getOperation} data-value=\"*\">x</button>\r\n              <button type=\"button\" className=\"cal btn\" id=\"divide\" onClick={this.getOperation} data-value=\"/\">/</button>\r\n              <button type=\"button\" className=\"cal btn\" id=\"decimal\" onClick={this.getInput} data-value=\".\">.</button>\r\n              <button type=\"button\" className=\"cal btn\" id=\"clear\" onClick={this.clearAll} data-value=\"AC\">AC</button>\r\n              <button type=\"button\" className=\"cal btn\" id=\"equals\" onClick={this.calculate}>=</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n\r\nexport default Buttons;\r\n"],"sourceRoot":""}